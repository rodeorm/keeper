// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rodeorm/keeper/internal/core (interfaces: MessageStorager)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/rodeorm/keeper/internal/core"
)

// MockMessageStorager is a mock of MessageStorager interface.
type MockMessageStorager struct {
	ctrl     *gomock.Controller
	recorder *MockMessageStoragerMockRecorder
}

// MockMessageStoragerMockRecorder is the mock recorder for MockMessageStorager.
type MockMessageStoragerMockRecorder struct {
	mock *MockMessageStorager
}

// NewMockMessageStorager creates a new mock instance.
func NewMockMessageStorager(ctrl *gomock.Controller) *MockMessageStorager {
	mock := &MockMessageStorager{ctrl: ctrl}
	mock.recorder = &MockMessageStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageStorager) EXPECT() *MockMessageStoragerMockRecorder {
	return m.recorder
}

// AddMessage mocks base method.
func (m *MockMessageStorager) AddMessage(arg0 context.Context, arg1 *core.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMessage", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddMessage indicates an expected call of AddMessage.
func (mr *MockMessageStoragerMockRecorder) AddMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMessage", reflect.TypeOf((*MockMessageStorager)(nil).AddMessage), arg0, arg1)
}

// SelectUnsendedMessages mocks base method.
func (m *MockMessageStorager) SelectUnsendedMessages(arg0 context.Context) ([]core.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectUnsendedMessages", arg0)
	ret0, _ := ret[0].([]core.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectUnsendedMessages indicates an expected call of SelectUnsendedMessages.
func (mr *MockMessageStoragerMockRecorder) SelectUnsendedMessages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectUnsendedMessages", reflect.TypeOf((*MockMessageStorager)(nil).SelectUnsendedMessages), arg0)
}

// UpdateMessage mocks base method.
func (m *MockMessageStorager) UpdateMessage(arg0 context.Context, arg1 *core.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMessage", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMessage indicates an expected call of UpdateMessage.
func (mr *MockMessageStoragerMockRecorder) UpdateMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMessage", reflect.TypeOf((*MockMessageStorager)(nil).UpdateMessage), arg0, arg1)
}
