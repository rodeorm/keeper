// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rodeorm/keeper/internal/core (interfaces: SessionStorager)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/rodeorm/keeper/internal/core"
)

// MockSessionStorager is a mock of SessionStorager interface.
type MockSessionStorager struct {
	ctrl     *gomock.Controller
	recorder *MockSessionStoragerMockRecorder
}

// MockSessionStoragerMockRecorder is the mock recorder for MockSessionStorager.
type MockSessionStoragerMockRecorder struct {
	mock *MockSessionStorager
}

// NewMockSessionStorager creates a new mock instance.
func NewMockSessionStorager(ctrl *gomock.Controller) *MockSessionStorager {
	mock := &MockSessionStorager{ctrl: ctrl}
	mock.recorder = &MockSessionStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionStorager) EXPECT() *MockSessionStoragerMockRecorder {
	return m.recorder
}

// EndSession mocks base method.
func (m *MockSessionStorager) EndSession(arg0 *core.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EndSession", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// EndSession indicates an expected call of EndSession.
func (mr *MockSessionStoragerMockRecorder) EndSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EndSession", reflect.TypeOf((*MockSessionStorager)(nil).EndSession), arg0)
}

// StartSession mocks base method.
func (m *MockSessionStorager) StartSession(arg0 *core.User) (*core.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartSession", arg0)
	ret0, _ := ret[0].(*core.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartSession indicates an expected call of StartSession.
func (mr *MockSessionStoragerMockRecorder) StartSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartSession", reflect.TypeOf((*MockSessionStorager)(nil).StartSession), arg0)
}

// UpdateSession mocks base method.
func (m *MockSessionStorager) UpdateSession(arg0 *core.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSession", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSession indicates an expected call of UpdateSession.
func (mr *MockSessionStoragerMockRecorder) UpdateSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSession", reflect.TypeOf((*MockSessionStorager)(nil).UpdateSession), arg0)
}
