package repo

import (
	"context"
	"fmt"
)

// createTables создает таблицы, если они не созданы ранее
func (s *postgresStorage) createTables(ctx context.Context) error {
	_, err := s.DB.ExecContext(ctx,
		`	CREATE SCHEMA IF NOT EXISTS cmn;
			CREATE SCHEMA IF NOT EXISTS dbo;
			CREATE TABLE IF NOT EXISTS cmn.Users 
			(
				ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY 	
				, Login                 TEXT        UNIQUE       		
				, Name                  TEXT     		  		
				, Email                 TEXT     		
				, Phone		            TEXT      		
				, Password              TEXT   
				, Verified				BOOL    		         
				, PRIMARY KEY (ID)
			) WITH (OIDS=FALSE, FILLFACTOR=90) 
			;
			COMMENT ON TABLE cmn.Users 				  is 'Пользователи';
			COMMENT ON COLUMN cmn.Users.ID 			  is 'Уникальный идентификатор';
			COMMENT ON COLUMN cmn.Users.Login         is 'Логин';
			COMMENT ON COLUMN cmn.Users.Name          is 'Имя';
			COMMENT ON COLUMN cmn.Users.Email         is 'Адрес электронной почты';
			COMMENT ON COLUMN cmn.Users.Phone		  is 'Телефон';
			COMMENT ON COLUMN cmn.Users.Password      is 'Пароль';

			-- Добавляем индексы для повышения производительности запросов (Некластеризованные, необходимость Кластеризованных в данном случае не ясна)
			CREATE INDEX IF NOT EXISTS idx_users_id ON cmn.Users (ID);
			CREATE INDEX IF NOT EXISTS  idx_users_login ON cmn.Users (Login) INCLUDE (Password);

			CREATE TABLE IF NOT EXISTS cmn.Sessions
			(
			ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY 
			, UserID     	INT
			, LoginDate 		TIMESTAMPTZ
			, LastActionDate 		TIMESTAMPTZ
			, LogoutDate 		TIMESTAMPTZ
			, PRIMARY KEY (ID)
			, FOREIGN KEY (UserID) REFERENCES cmn.Users(ID) DEFERRABLE
			) WITH (OIDS=FALSE, FILLFACTOR=90) 
			;
			COMMENT ON TABLE cmn.Sessions is 'Сессии пользователей';
			COMMENT ON COLUMN cmn.Sessions.ID is 'Уникальный идентификатор';
			COMMENT ON COLUMN cmn.Sessions.LoginDate 	is 'Дата и время логина пользователя в Личный кабинет';	
			COMMENT ON COLUMN cmn.Sessions.LastActionDate 	is 'Дата и время последнего действия пользователя в Личном кабинете';	
			COMMENT ON COLUMN cmn.Sessions.LogoutDate is 'Дата и время выхода пользователя из Личного кабинета';	
			CREATE INDEX IF NOT EXISTS idx_sessions_id ON cmn.Sessions (ID) INCLUDE (LoginDate, LastActionDate, LogoutDate);

			CREATE TABLE IF NOT EXISTS cmn.Emails(
			ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY 
			, UserID 		INT
			, SendedDate 	TIMESTAMPTZ NULL
			, OTP 		    TEXT
			, Email 		TEXT
			, Login         TEXT
			, PRIMARY KEY (ID) 
			, FOREIGN KEY (UserID) REFERENCES cmn.Users(ID) DEFERRABLE
			)  WITH (OIDS=FALSE, FILLFACTOR=90)
				;


		COMMENT ON TABLE cmn.Emails 				is 'Авторизационные сообщения электронной почты';
		COMMENT ON COLUMN cmn.Emails.ID 			is 'Уникальный идентификатор';
		COMMENT ON COLUMN cmn.Emails.OTP 		    is 'Одноразовый пароль';
		COMMENT ON COLUMN cmn.Emails.Email 		is 'Адрес электронной почты, на который отправлено авторизационное сообщение';
		COMMENT ON COLUMN cmn.Emails.SendedDate 		is 'Время и дата отправки сообщения (с этого момента начинается отсчет до устаревания сообщения)';
		COMMENT ON COLUMN cmn.Emails.Login       is 'Логин пользователя'
		;

	CREATE TABLE IF NOT EXISTS dbo.DataTypes (
		ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY 
		, Name TEXT
		, PRIMARY KEY (ID) 
		);
	CREATE INDEX IF NOT EXISTS idx_datatypes_id ON dbo.DataTypes (ID);

	CREATE TABLE IF NOT EXISTS dbo.Data(
	ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY 
	, UserID 		INT
	, TypeID		INT
	, ByteData 		BYTEA NOT NULL                   
    , CreatedDate		TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
	, PRIMARY KEY (ID) 
	, FOREIGN KEY (UserID) REFERENCES cmn.Users(ID) DEFERRABLE
	, FOREIGN KEY (TypeID) REFERENCES dbo.DataTypes(ID) DEFERRABLE
	)  WITH (OIDS=FALSE, FILLFACTOR=90)
	;
	-- Добавляем индексы для повышения производительности запросов
	CREATE INDEX IF NOT EXISTS idx_data_typeid ON dbo.Data (TypeID);

	COMMENT ON TABLE dbo.Data				is 'Данные';
	COMMENT ON COLUMN dbo.Data.ID 			is 'Уникальный идентификатор';
	COMMENT ON COLUMN dbo.Data.TypeID 		is 'Тип данных';
	COMMENT ON COLUMN dbo.Data.ByteData 		is 'Данные в зашифрованном бинарном виде';
	COMMENT ON COLUMN dbo.Data.CreatedDate 		is 'Время и дата создания данных';`)
	if err != nil {
		return fmt.Errorf("%s: %w", "ошибка при создании таблиц", err)
	}
	return nil
}
